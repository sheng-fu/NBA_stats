mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
split_stat <- splits_url %>%
read_html %>%
html_node("#div_splits")%>%
html_table()
colnames(split_stat) = paste(colnames(split_stat), as.character(split_stat[1,]), sep = "X")
split_stat = dplyr::select(split_stat, -`X&nbsp`) %>% filter(XValue %in% c("Home", "Road")) %>%
mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
split_stat
H_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
split_stat$AvgBlk = as.numeric(split_stat$TotalsXBLK)/split_stat$TotalsXG
split_stat$AvgStl = as.numeric(split_stat$TotalsXSTL)/split_stat$TotalsXG
H_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
H_AvgBlk
A_AvgBlk = split_stat[split_stat$XValue == "Road",]$AvgBlk
A_AvgBlk
H_AvgStl = split_stat[split_stat$XValue == "Home",]$AvgStl
A_AvgStl = split_stat[split_stat$XValue == "Road",]$AvgStl
H_AvgStl
A_AvgStl
split_stat
# using tips on downloading Basketball-Reference.com's stats from the following webpage
# https://www.r-bloggers.com/2021/12/nba-analytics-tutorial-using-r-to-display-player-career-stats/
library(plyr)
library(tidyverse)
library(rvest)
library(ggrepel)
library(readr)
library(RCurl)
library(jpeg)
library(lubridate)
player_link = "/players/j/jacksja02.html"
get_bias <- function(player_link){
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html %>%
html_node("h1") %>% html_text() %>% trimws()
name
split_stat <- splits_url %>%
read_html %>%
html_node("#div_splits")%>%
html_table()
colnames(split_stat) = paste(colnames(split_stat), as.character(split_stat[1,]), sep = "X")
split_stat = dplyr::select(split_stat, -`X&nbsp`) %>% filter(XValue %in% c("Home", "Road")) %>%
mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
split_stat$AvgBlk = as.numeric(split_stat$TotalsXBLK)/split_stat$TotalsXG
split_stat$AvgStl = as.numeric(split_stat$TotalsXSTL)/split_stat$TotalsXG
h_games = split_stat[split_stat$XValue == "Home",]$TotalsXG
a_games = split_stat[split_stat$XValue == "Road",]$TotalsXG
h_mins = split_stat[split_stat$XValue == "Home",]$TotalsXMP
a_mins = split_stat[split_stat$XValue == "Road",]$TotalsXMP
h_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
h_AvgBlk = split_stat[split_stat$XValue == "Road",]$AvgBlk
h_AvgStl = split_stat[split_stat$XValue == "Home",]$AvgStl
h_AvgStl = split_stat[split_stat$XValue == "Road",]$AvgStl
# save to outputs
output = tibble(Player = name,
h_games = h_games, a_games = a_games,
h_mins = h_mins,
a_mins = a_mins, H_AvgBlk = h_AvgBlk,
h_AvgStl = h_AvgStl)
return(output)
}
teams = c("BOS", "PHI", "TOR", "BRK", "NYK",
"MIL", "CHI", "CLE", "IND", "DET",
"MIA", "ATL", "CHO", "WAS", "ORL",
"UTA", "DEN", "MIN", "POR", "OKC",
"PHO", "GSW", "LAC", "LAL", "SAC",
"MEM", "DAL", "NOP", "SAS", "HOU")
result = get_stats(player_link)
# using tips on downloading Basketball-Reference.com's stats from the following webpage
# https://www.r-bloggers.com/2021/12/nba-analytics-tutorial-using-r-to-display-player-career-stats/
library(plyr)
library(tidyverse)
library(rvest)
library(ggrepel)
library(readr)
library(RCurl)
library(jpeg)
library(lubridate)
#player_link = "/players/j/jacksja02.html"
get_stats <- function(player_link){
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html %>%
html_node("h1") %>% html_text() %>% trimws()
name
split_stat <- splits_url %>%
read_html %>%
html_node("#div_splits")%>%
html_table()
colnames(split_stat) = paste(colnames(split_stat), as.character(split_stat[1,]), sep = "X")
split_stat = dplyr::select(split_stat, -`X&nbsp`) %>% filter(XValue %in% c("Home", "Road")) %>%
mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
split_stat$AvgBlk = as.numeric(split_stat$TotalsXBLK)/split_stat$TotalsXG
split_stat$AvgStl = as.numeric(split_stat$TotalsXSTL)/split_stat$TotalsXG
h_games = split_stat[split_stat$XValue == "Home",]$TotalsXG
a_games = split_stat[split_stat$XValue == "Road",]$TotalsXG
h_mins = split_stat[split_stat$XValue == "Home",]$TotalsXMP
a_mins = split_stat[split_stat$XValue == "Road",]$TotalsXMP
h_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
h_AvgBlk = split_stat[split_stat$XValue == "Road",]$AvgBlk
h_AvgStl = split_stat[split_stat$XValue == "Home",]$AvgStl
h_AvgStl = split_stat[split_stat$XValue == "Road",]$AvgStl
# save to outputs
output = tibble(Player = name,
h_games = h_games, a_games = a_games,
h_mins = h_mins,
a_mins = a_mins, H_AvgBlk = h_AvgBlk,
h_AvgStl = h_AvgStl)
return(output)
}
teams = c("BOS", "PHI", "TOR", "BRK", "NYK",
"MIL", "CHI", "CLE", "IND", "DET",
"MIA", "ATL", "CHO", "WAS", "ORL",
"UTA", "DEN", "MIN", "POR", "OKC",
"PHO", "GSW", "LAC", "LAL", "SAC",
"MEM", "DAL", "NOP", "SAS", "HOU")
result = get_stats(player_link)
for (team in teams){
team_url = paste("https://www.basketball-reference.com/teams/", team, "/2023.html", sep = "")
roster <- team_url %>%
read_html %>%
html_node("#div_roster")%>%
html_table()
roster <- team_url %>%
read_html %>%
html_node("#div_roster") %>%  html_node("#roster") %>% html_nodes("a") %>% html_attr("href")
roster = roster[grepl("players", roster)]
for (i in roster){
print(i)
url <- paste0("https://www.basketball-reference.com",i)
stat <- url %>%
read_html %>%
html_node("#div_per_game")
if (!is.na(stat)){
stat <- url %>%
read_html %>%
html_node("#div_per_game")%>%
html_table()
if("2022-23" %in% stat$Season)
{ result = rbind(result, get_stats(i))}
}
}
}
# using tips on downloading Basketball-Reference.com's stats from the following webpage
# https://www.r-bloggers.com/2021/12/nba-analytics-tutorial-using-r-to-display-player-career-stats/
library(plyr)
library(tidyverse)
library(rvest)
library(ggrepel)
library(readr)
library(RCurl)
library(jpeg)
library(lubridate)
#player_link = "/players/j/jacksja02.html"
get_stats <- function(player_link){
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html %>%
html_node("h1") %>% html_text() %>% trimws()
name
split_stat <- splits_url %>%
read_html %>%
html_node("#div_splits")%>%
html_table()
colnames(split_stat) = paste(colnames(split_stat), as.character(split_stat[1,]), sep = "X")
split_stat = dplyr::select(split_stat, -`X&nbsp`) %>% filter(XValue %in% c("Home", "Road")) %>%
mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
split_stat$AvgBlk = as.numeric(split_stat$TotalsXBLK)/split_stat$TotalsXG
split_stat$AvgStl = as.numeric(split_stat$TotalsXSTL)/split_stat$TotalsXG
h_games = split_stat[split_stat$XValue == "Home",]$TotalsXG
a_games = split_stat[split_stat$XValue == "Road",]$TotalsXG
h_mins = split_stat[split_stat$XValue == "Home",]$TotalsXMP
a_mins = split_stat[split_stat$XValue == "Road",]$TotalsXMP
h_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
h_AvgBlk = split_stat[split_stat$XValue == "Road",]$AvgBlk
h_AvgStl = split_stat[split_stat$XValue == "Home",]$AvgStl
h_AvgStl = split_stat[split_stat$XValue == "Road",]$AvgStl
# save to outputs
output = tibble(Player = name,
h_games = h_games, a_games = a_games,
h_mins = h_mins,
a_mins = a_mins, H_AvgBlk = h_AvgBlk,
h_AvgStl = h_AvgStl)
return(output)
}
teams = c("BOS", "PHI", "TOR", "BRK", "NYK",
"MIL", "CHI", "CLE", "IND", "DET",
"MIA", "ATL", "CHO", "WAS", "ORL",
"UTA", "DEN", "MIN", "POR", "OKC",
"PHO", "GSW", "LAC", "LAL", "SAC",
"MEM", "DAL", "NOP", "SAS", "HOU")
result = get_stats(player_link)
for (team in teams){
team_url = paste("https://www.basketball-reference.com/teams/", team, "/2023.html", sep = "")
roster <- team_url %>%
read_html %>%
html_node("#div_roster")%>%
html_table()
roster <- team_url %>%
read_html %>%
html_node("#div_roster") %>%  html_node("#roster") %>% html_nodes("a") %>% html_attr("href")
roster = roster[grepl("players", roster)]
for (i in roster){
print(i)
url <- paste0("https://www.basketball-reference.com",i)
stat <- url %>%
read_html %>%
html_node("#div_per_game")
if (!is.na(stat)){
stat <- url %>%
read_html %>%
html_node("#div_per_game")%>%
html_table()
if("2022-23" %in% stat$Season)
{ result = rbind(result, get_stats(i))}
}
}
}
# using tips on downloading Basketball-Reference.com's stats from the following webpage
# https://www.r-bloggers.com/2021/12/nba-analytics-tutorial-using-r-to-display-player-career-stats/
library(plyr)
library(tidyverse)
library(rvest)
library(ggrepel)
library(readr)
library(RCurl)
library(jpeg)
library(lubridate)
#player_link = "/players/j/jacksja02.html"
get_stats <- function(player_link){
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html %>%
html_node("h1") %>% html_text() %>% trimws()
name
split_stat <- splits_url %>%
read_html %>%
html_node("#div_splits")%>%
html_table()
colnames(split_stat) = paste(colnames(split_stat), as.character(split_stat[1,]), sep = "X")
split_stat = dplyr::select(split_stat, -`X&nbsp`) %>% filter(XValue %in% c("Home", "Road")) %>%
mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
split_stat$AvgBlk = as.numeric(split_stat$TotalsXBLK)/split_stat$TotalsXG
split_stat$AvgStl = as.numeric(split_stat$TotalsXSTL)/split_stat$TotalsXG
h_games = split_stat[split_stat$XValue == "Home",]$TotalsXG
a_games = split_stat[split_stat$XValue == "Road",]$TotalsXG
h_mins = split_stat[split_stat$XValue == "Home",]$TotalsXMP
a_mins = split_stat[split_stat$XValue == "Road",]$TotalsXMP
h_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
h_AvgBlk = split_stat[split_stat$XValue == "Road",]$AvgBlk
h_AvgStl = split_stat[split_stat$XValue == "Home",]$AvgStl
h_AvgStl = split_stat[split_stat$XValue == "Road",]$AvgStl
# save to outputs
output = tibble(Player = name,
h_games = h_games, a_games = a_games,
h_mins = h_mins,
a_mins = a_mins, H_AvgBlk = h_AvgBlk,
h_AvgStl = h_AvgStl)
return(output)
}
teams = c("BOS", "PHI", "TOR", "BRK", "NYK",
"MIL", "CHI", "CLE", "IND", "DET",
"MIA", "ATL", "CHO", "WAS", "ORL",
"UTA", "DEN", "MIN", "POR", "OKC",
"PHO", "GSW", "LAC", "LAL", "SAC",
"MEM", "DAL", "NOP", "SAS", "HOU")
result = get_stats(player_link)
teams = c("BOS", "PHI", "TOR", "BRK", "NYK",
"MIL", "CHI", "CLE", "IND", "DET",
"MIA", "ATL", "CHO", "WAS", "ORL",
"UTA", "DEN", "MIN", "POR", "OKC",
"PHO", "GSW", "LAC", "LAL", "SAC",
"MEM", "DAL", "NOP", "SAS", "HOU")
result = get_stats(player_link)
player_link = "/players/j/jacksja02.html"
result = get_stats(player_link)
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html %>%
html_node("h1") %>% html_text() %>% trimws()
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html %>%
html_node("h1") %>% html_text() %>% trimws()
# using tips on downloading Basketball-Reference.com's stats from the following webpage
# https://www.r-bloggers.com/2021/12/nba-analytics-tutorial-using-r-to-display-player-career-stats/
library(plyr)
library(tidyverse)
library(rvest)
library(ggrepel)
library(readr)
library(RCurl)
library(jpeg)
library(lubridate)
player_link = "/players/j/jacksja02.html"
get_stats <- function(player_link){
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html %>%
html_node("h1") %>% html_text() %>% trimws()
name
split_stat <- splits_url %>%
read_html %>%
html_node("#div_splits")%>%
html_table()
colnames(split_stat) = paste(colnames(split_stat), as.character(split_stat[1,]), sep = "X")
split_stat = dplyr::select(split_stat, -`X&nbsp`) %>% filter(XValue %in% c("Home", "Road")) %>%
mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
split_stat$AvgBlk = as.numeric(split_stat$TotalsXBLK)/split_stat$TotalsXG
split_stat$AvgStl = as.numeric(split_stat$TotalsXSTL)/split_stat$TotalsXG
h_games = split_stat[split_stat$XValue == "Home",]$TotalsXG
a_games = split_stat[split_stat$XValue == "Road",]$TotalsXG
h_mins = split_stat[split_stat$XValue == "Home",]$TotalsXMP
a_mins = split_stat[split_stat$XValue == "Road",]$TotalsXMP
h_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
h_AvgBlk = split_stat[split_stat$XValue == "Road",]$AvgBlk
h_AvgStl = split_stat[split_stat$XValue == "Home",]$AvgStl
h_AvgStl = split_stat[split_stat$XValue == "Road",]$AvgStl
# save to outputs
output = tibble(Player = name,
h_games = h_games, a_games = a_games,
h_mins = h_mins,
a_mins = a_mins, H_AvgBlk = h_AvgBlk,
h_AvgStl = h_AvgStl)
return(output)
}
result = get_stats(player_link)
result = get_stats(player_link)
# using tips on downloading Basketball-Reference.com's stats from the following webpage
# https://www.r-bloggers.com/2021/12/nba-analytics-tutorial-using-r-to-display-player-career-stats/
library(plyr)
library(tidyverse)
library(rvest)
library(ggrepel)
library(readr)
library(RCurl)
library(jpeg)
library(lubridate)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
Sys.sleep(1)
Sys.sleep(10)
# using tips on downloading Basketball-Reference.com's stats from the following webpage
# https://www.r-bloggers.com/2021/12/nba-analytics-tutorial-using-r-to-display-player-career-stats/
library(plyr)
library(tidyverse)
library(rvest)
library(ggrepel)
library(readr)
library(RCurl)
library(jpeg)
library(lubridate)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
player_link = "/players/j/jacksja02.html"
get_stats <- function(player_link){
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html(user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36") %>%
html_node("h1") %>% html_text() %>% trimws()
split_stat <- splits_url %>%
read_html %>%
html_node("#div_splits")%>%
html_table()
colnames(split_stat) = paste(colnames(split_stat), as.character(split_stat[1,]), sep = "X")
split_stat = dplyr::select(split_stat, -`X&nbsp`) %>% filter(XValue %in% c("Home", "Road")) %>%
mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
#str(split_stat)
split_stat$AvgBlk = as.numeric(split_stat$TotalsXBLK)/split_stat$TotalsXG
split_stat$AvgStl = as.numeric(split_stat$TotalsXSTL)/split_stat$TotalsXG
h_games = split_stat[split_stat$XValue == "Home",]$TotalsXG
a_games = split_stat[split_stat$XValue == "Road",]$TotalsXG
h_mins = split_stat[split_stat$XValue == "Home",]$TotalsXMP
a_mins = split_stat[split_stat$XValue == "Road",]$TotalsXMP
h_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
a_AvgBlk = split_stat[split_stat$XValue == "Road",]$AvgBlk
h_AvgStl = split_stat[split_stat$XValue == "Home",]$AvgStl
a_AvgStl = split_stat[split_stat$XValue == "Road",]$AvgStl
# save to outputs
output = tibble(Player = name,
h_games = h_games, a_games = a_games,
h_mins = h_mins,
a_mins = a_mins, h_AvgBlk = h_AvgBlk,
h_AvgStl = h_AvgStl, a_AvgBlk = a_AvgBlk,
a_AvgStl = a_AvgStl)
return(output)
}
teams = c("BOS", "PHI", "TOR", "BRK", "NYK",
"MIL", "CHI", "CLE", "IND", "DET",
"MIA", "ATL", "CHO", "WAS", "ORL",
"UTA", "DEN", "MIN", "POR", "OKC",
"PHO", "GSW", "LAC", "LAL", "SAC",
"MEM", "DAL", "NOP", "SAS", "HOU")
result = get_stats(player_link)
for (team in teams){
team_url = paste("https://www.basketball-reference.com/teams/", team, "/2023.html", sep = "")
roster <- team_url %>%
read_html %>%
html_node("#div_roster")%>%
html_table()
roster <- team_url %>%
read_html %>%
html_node("#div_roster") %>%  html_node("#roster") %>% html_nodes("a") %>% html_attr("href")
roster = roster[grepl("players", roster)]
for (i in roster){
Sys.sleep(10)
print(i)
url <- paste0("https://www.basketball-reference.com",i)
stat <- url %>%
read_html %>%
html_node("#div_per_game")
if (!is.na(stat)){
stat <- url %>%
read_html %>%
html_node("#div_per_game")%>%
html_table()
if("2022-23" %in% stat$Season)
{ result = rbind(result, get_stats(i))}
}
}
}
write.table(result, file = "data/23_blk_stl_stats.tsv", quote = F, row.names = F, sep = "\t",
fileEncoding="UTF-8")
write.table(result, file = "data/23_blk_stl_stats.tsv", quote = F, row.names = F, sep = "\t",
fileEncoding="UTF-8")
# using tips on downloading Basketball-Reference.com's stats from the following webpage
# https://www.r-bloggers.com/2021/12/nba-analytics-tutorial-using-r-to-display-player-career-stats/
library(plyr)
library(tidyverse)
library(rvest)
library(ggrepel)
library(readr)
library(RCurl)
library(jpeg)
library(lubridate)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
player_link = "/players/j/jacksja02.html"
get_stats <- function(player_link){
url <- paste0("https://www.basketball-reference.com",player_link)
splits_url <- paste0("https://www.basketball-reference.com", gsub(".html", "/splits/2023", player_link))
name <- url %>%
read_html(user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36") %>%
html_node("h1") %>% html_text() %>% trimws()
split_stat <- splits_url %>%
read_html %>%
html_node("#div_splits")%>%
html_table()
colnames(split_stat) = paste(colnames(split_stat), as.character(split_stat[1,]), sep = "X")
split_stat = dplyr::select(split_stat, -`X&nbsp`) %>% filter(XValue %in% c("Home", "Road")) %>%
mutate_at(vars(-("XValue")), function(x) as.numeric(as.character(x)))
#str(split_stat)
split_stat$AvgBlk = as.numeric(split_stat$TotalsXBLK)/split_stat$TotalsXG
split_stat$AvgStl = as.numeric(split_stat$TotalsXSTL)/split_stat$TotalsXG
h_games = split_stat[split_stat$XValue == "Home",]$TotalsXG
a_games = split_stat[split_stat$XValue == "Road",]$TotalsXG
h_mins = split_stat[split_stat$XValue == "Home",]$TotalsXMP
a_mins = split_stat[split_stat$XValue == "Road",]$TotalsXMP
h_AvgBlk = split_stat[split_stat$XValue == "Home",]$AvgBlk
a_AvgBlk = split_stat[split_stat$XValue == "Road",]$AvgBlk
h_AvgStl = split_stat[split_stat$XValue == "Home",]$AvgStl
a_AvgStl = split_stat[split_stat$XValue == "Road",]$AvgStl
# save to outputs
output = tibble(Player = name,
h_games = h_games, a_games = a_games,
h_mins = h_mins,
a_mins = a_mins, h_AvgBlk = h_AvgBlk,
h_AvgStl = h_AvgStl, a_AvgBlk = a_AvgBlk,
a_AvgStl = a_AvgStl)
return(output)
}
teams = c("BOS", "PHI", "TOR", "BRK", "NYK",
"MIL", "CHI", "CLE", "IND", "DET",
"MIA", "ATL", "CHO", "WAS", "ORL",
"UTA", "DEN", "MIN", "POR", "OKC",
"PHO", "GSW", "LAC", "LAL", "SAC",
"MEM", "DAL", "NOP", "SAS", "HOU")
result = get_stats(player_link)
for (team in teams){
team_url = paste("https://www.basketball-reference.com/teams/", team, "/2023.html", sep = "")
roster <- team_url %>%
read_html %>%
html_node("#div_roster")%>%
html_table()
roster <- team_url %>%
read_html %>%
html_node("#div_roster") %>%  html_node("#roster") %>% html_nodes("a") %>% html_attr("href")
roster = roster[grepl("players", roster)]
for (i in roster){
Sys.sleep(5)
print(i)
url <- paste0("https://www.basketball-reference.com",i)
stat <- url %>%
read_html %>%
html_node("#div_per_game")
if (!is.na(stat)){
stat <- url %>%
read_html %>%
html_node("#div_per_game")%>%
html_table()
if("2022-23" %in% stat$Season)
{ result = rbind(result, get_stats(i))}
}
}
}
